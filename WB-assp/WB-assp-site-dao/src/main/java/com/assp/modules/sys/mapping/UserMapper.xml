<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.assp.modules.sys.mapper.UserMapper">

<!--     <delete id="deleteUserRelRoles" parameterType="java.lang.Integer">
      DELETE from sys_user_rel_roles 
      WHERE user_id= #{value}
    </delete> -->
    
  <!--   <insert id="insertUserRelRoles" parameterType="java.util.List">
		INSERT INTO  sys_user_rel_roles(user_id,roles_id,create_time) 
		VALUES
		<foreach collection="list" item="item" index="index" separator=",">
		(#{item.userId},#{item.rolesId},#{item.createTime})  
		</foreach>   
    </insert> -->
    
    <!-- 根据用户的账号查询出该用户对应的角色和资源 -->
    <select id="selectRolesAndPermissionsByUserId" resultType="java.util.HashMap" parameterType="java.lang.Integer">
	     SELECT DISTINCT
			u.user_id AS userId,
      u.nick_name as nickName,
			p.permission_code AS permissionCode,
			p.permission_name As permission,
			p.permission_id As permissionId,
			p.permission_url AS permissionUrl,
			r.role_id AS roleId,
			r.role_name AS roleName,
			r.role_code As roleCode
		FROM
			sys_user as u
      JOIN sys_user_rel_roles urR ON u.user_id = urR.user_id
      JOIN sys_role as  r ON r.role_id = urR.role_id
      JOIN sys_role_rel_permission as rpR ON r.role_id = rpR.role_id
      JOIN sys_permission as p ON p.permission_id = rpR.role_rel_permission_id
  
		WHERE
			u.user_id = #{value}
	   AND r.role_status = 0
	   AND p.permission_status = 0
	   AND u.user_status= 0
       AND u.data_status = 0
    </select>
    
    <!-- 获取当前用户下的站点信息-->
    <select id="getUserWebSite" resultType="com.assp.modules.website.entity.Website" parameterType="java.lang.Integer">
    	SELECT
			ww.site_id AS siteId,
			ww.site_name AS siteName,
			ww.site_domain AS siteDomain,
			ww.site_port AS sitePort,
			ww.site_ip AS siteIp,
			ww.create_time AS createTime,
			ww.update_time AS updateTime,
			ww.dead_time AS deadTime,
			wwrt.template_id AS templateId
		FROM
		wms_website AS ww
		INNER JOIN wms_user_rel_website  AS wurw
			ON wurw.site_id = ww.site_id
			AND wurw.user_id= #{value}
			AND wurw.rel_status=0
			AND ww.site_status=0
		INNER JOIN wms_website_rel_template AS wwrt 
			ON wwrt.site_id=ww.site_id
		ORDER BY ww.create_time , ww.update_time
    </select>
   
    <select id="getUserNum" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    	SELECT
		wms_website.statistical
		FROM
		wms_website 
		WHERE site_id=1
    </select>
    <update id="updateUserNum"  parameterType="java.lang.Integer" >
         UPDATE wms_website SET statistical=#{value} WHERE site_id=1
    </update>
    
    <insert id="insertUser" parameterType="com.assp.modules.sys.entity.User" useGeneratedKeys="true" keyProperty="userId"> 
    	INSERT INTO
    	sys_user(user_name,nick_name,real_name,password,sex,phone,is_active)
    	VALUE
    	(#{userName},#{nickName},#{realName},#{password},#{sex},#{phone},#{isActive})
    </insert>
    
    <insert id="insertUserRole" parameterType="java.lang.Integer">
    	INSERT INTO 
    	sys_user_rel_roles(user_id,role_id) 
    	VALUE
    	(#{userId},1)
    </insert>
</mapper>